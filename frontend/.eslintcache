[{"/mnt/c/Users/SkyDi/dev/flatiron/labs/harmony-app/frontend/src/actions/authActions.js":"1","/mnt/c/Users/SkyDi/dev/flatiron/labs/harmony-app/frontend/src/containers/Chatroom.jsx":"2","/mnt/c/Users/SkyDi/dev/flatiron/labs/harmony-app/frontend/src/lib/apiClient.js":"3","/mnt/c/Users/SkyDi/dev/flatiron/labs/harmony-app/frontend/src/components/Login.jsx":"4","/mnt/c/Users/SkyDi/dev/flatiron/labs/harmony-app/frontend/src/components/Home.jsx":"5","/mnt/c/Users/SkyDi/dev/flatiron/labs/harmony-app/frontend/src/reducers/chatroomReducer.js":"6","/mnt/c/Users/SkyDi/dev/flatiron/labs/harmony-app/frontend/src/store.js":"7","/mnt/c/Users/SkyDi/dev/flatiron/labs/harmony-app/frontend/src/App.js":"8","/mnt/c/Users/SkyDi/dev/flatiron/labs/harmony-app/frontend/src/containers/ChatroomList.jsx":"9","/mnt/c/Users/SkyDi/dev/flatiron/labs/harmony-app/frontend/src/components/post_channel.js":"10","/mnt/c/Users/SkyDi/dev/flatiron/labs/harmony-app/frontend/src/components/NavBar.jsx":"11"},{"size":1398,"mtime":1610071155715,"results":"12","hashOfConfig":"13"},{"size":2736,"mtime":1610075341553,"results":"14","hashOfConfig":"13"},{"size":691,"mtime":1610075632031,"results":"15","hashOfConfig":"13"},{"size":3749,"mtime":1610063425151,"results":"16","hashOfConfig":"13"},{"size":2138,"mtime":1610075821212,"results":"17","hashOfConfig":"13"},{"size":991,"mtime":1610042702839,"results":"18","hashOfConfig":"13"},{"size":612,"mtime":1610056121884,"results":"19","hashOfConfig":"13"},{"size":1626,"mtime":1610059742496,"results":"20","hashOfConfig":"13"},{"size":1990,"mtime":1610075643815,"results":"21","hashOfConfig":"13"},{"size":2140,"mtime":1610068440403,"results":"22","hashOfConfig":"13"},{"size":1122,"mtime":1610042702791,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q29wxc",{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/SkyDi/dev/flatiron/labs/harmony-app/frontend/src/actions/authActions.js",[],"/mnt/c/Users/SkyDi/dev/flatiron/labs/harmony-app/frontend/src/containers/Chatroom.jsx",["49","50","51"],"import React, { useEffect, useState } from \"react\";\nimport Post from \"../components/Post\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst socketClient = new WebSocket(\"ws://localhost:3000/cable\");\n\n// Must Receive User & Chatroom object\nconst Chatroom = ({ chatroom }) => {\n  console.log(chatroom);\n  // const chatroom = useSelector((state) => state.chatroomState.currentChatroom);\n  // const user = useSelector((state) => state.userState.currentUser);\n\n  let [user_id, chatroom_id] = [2, 1];\n\n  const [posts, setPosts] = useState([]);\n  const [newPost, setNewPost] = useState(\"\");\n\n  useEffect(() => {\n    socketClient.onopen = (event) => {\n      const message = {\n        command: \"subscribe\",\n        identifier: JSON.stringify({ channel: \"PostChannel\", id: chatroom_id }),\n      };\n      socketClient.send(JSON.stringify(message));\n    };\n\n    socketClient.onmessage = (event) => {\n      let serverResponse = JSON.parse(event.data);\n\n      if (serverResponse.type === \"ping\") return;\n\n      const data = serverResponse.message;\n\n      if (data && data.type === \"all_posts\") {\n        setPosts(data.post_history);\n      }\n      if (data && data.type === \"new_post\") {\n        const incomingPost = data.post;\n        setPosts((prevPosts) => [...prevPosts, incomingPost]);\n      }\n    };\n  }, []);\n\n  const sendPost = (e) => {\n    e.preventDefault();\n    const message = {\n      command: \"message\",\n      identifier: JSON.stringify({ channel: \"PostChannel\", id: 1 }),\n      data: JSON.stringify({\n        action: \"send_post\",\n        content: newPost,\n        user_id: user_id,\n        chatroom_id: chatroom_id,\n      }),\n    };\n    socketClient.send(JSON.stringify(message));\n    setNewPost(\"\");\n    // console.log(\"activity sent:\", newPost);\n  };\n\n  return (\n    <div className=\"container column is-10\">\n      <div className=\"section\">\n        {/* {console.log(posts)} */}\n        {posts.map((post, index) => {\n          return <Post key={index} post={post} />;\n        })}\n        {/* TEXT FORM */}\n        <div className=\"section\">\n          <form onSubmit={sendPost}>\n            <div className=\"field has-addons\">\n              <div className=\"control is-expanded\">\n                <input\n                  className=\"input\"\n                  name=\"userInput\"\n                  type=\"text\"\n                  value={newPost}\n                  placeholder=\"Type your message\"\n                  onChange={(e) => setNewPost(e.target.value)}\n                />\n              </div>\n              <div className=\"control\">\n                <button className=\"button is-info\">Send</button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Chatroom;\n","/mnt/c/Users/SkyDi/dev/flatiron/labs/harmony-app/frontend/src/lib/apiClient.js",[],"/mnt/c/Users/SkyDi/dev/flatiron/labs/harmony-app/frontend/src/components/Login.jsx",[],"/mnt/c/Users/SkyDi/dev/flatiron/labs/harmony-app/frontend/src/components/Home.jsx",["52","53","54"],"/mnt/c/Users/SkyDi/dev/flatiron/labs/harmony-app/frontend/src/reducers/chatroomReducer.js",[],"/mnt/c/Users/SkyDi/dev/flatiron/labs/harmony-app/frontend/src/store.js",[],["55","56"],"/mnt/c/Users/SkyDi/dev/flatiron/labs/harmony-app/frontend/src/App.js",[],["57","58"],"/mnt/c/Users/SkyDi/dev/flatiron/labs/harmony-app/frontend/src/containers/ChatroomList.jsx",["59","60","61","62","63"],"/mnt/c/Users/SkyDi/dev/flatiron/labs/harmony-app/frontend/src/components/post_channel.js",[],"/mnt/c/Users/SkyDi/dev/flatiron/labs/harmony-app/frontend/src/components/NavBar.jsx",[],{"ruleId":"64","severity":1,"message":"65","line":3,"column":10,"nodeType":"66","messageId":"67","endLine":3,"endColumn":21},{"ruleId":"64","severity":1,"message":"68","line":3,"column":23,"nodeType":"66","messageId":"67","endLine":3,"endColumn":34},{"ruleId":"69","severity":1,"message":"70","line":42,"column":6,"nodeType":"71","endLine":42,"endColumn":8,"suggestions":"72"},{"ruleId":"64","severity":1,"message":"73","line":1,"column":28,"nodeType":"66","messageId":"67","endLine":1,"endColumn":36},{"ruleId":"64","severity":1,"message":"65","line":7,"column":10,"nodeType":"66","messageId":"67","endLine":7,"endColumn":21},{"ruleId":"64","severity":1,"message":"68","line":7,"column":23,"nodeType":"66","messageId":"67","endLine":7,"endColumn":34},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"74","replacedBy":"78"},{"ruleId":"76","replacedBy":"79"},{"ruleId":"69","severity":1,"message":"80","line":14,"column":6,"nodeType":"71","endLine":14,"endColumn":16,"suggestions":"81"},{"ruleId":"64","severity":1,"message":"82","line":16,"column":7,"nodeType":"66","messageId":"67","endLine":16,"endColumn":10},{"ruleId":"83","severity":1,"message":"84","line":25,"column":17,"nodeType":"85","endLine":25,"endColumn":20},{"ruleId":"83","severity":1,"message":"84","line":30,"column":11,"nodeType":"85","endLine":30,"endColumn":41},{"ruleId":"83","severity":1,"message":"84","line":36,"column":11,"nodeType":"85","endLine":36,"endColumn":14},"no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chatroom_id'. Either include it or remove the dependency array.","ArrayExpression",["86"],"'useState' is defined but never used.","no-native-reassign",["87"],"no-negated-in-lhs",["88"],["87"],["88"],"React Hook useEffect has missing dependencies: 'chatroom' and 'chatrooms'. Either include them or remove the dependency array.",["89"],"'URL' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"90","fix":"91"},"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [chatroom_id]",{"range":"94","text":"95"},"Update the dependencies array to be: [chatroom, chatrooms, dispatch]",{"range":"96","text":"97"},[1310,1312],"[chatroom_id]",[533,543],"[chatroom, chatrooms, dispatch]"]